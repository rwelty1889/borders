This document is going to focus on boundaries in the US. There
is potential for the project to expand, but the initial project
is US-centric.

Background
==========

Administrative and other types of boundaries in OpenStreetMap
can be valuable resources for geocoders like Pelias, but they
have many problems in their current form. 

The problems of Bitrot and maintanence have caused a number of mappers
to start considering whether it is truly appropriate to store borders
in OpenStreetMap. This document discusses some of the myriad of
problems that exist and then outlines an approach to fixing it.

Sources of Boundary Data
========================

There are a number of sources for US boundaries, mostly
government sources.

TIGER - US Census Bureau
------------------------
The Census Bureau has a very large collection of border data
which they maintain to aid their counting efforts. Most of the
data on legal boundaries is sourced from local governments, but
some of the boundaries are creations of the Census Bureau
(the statistical boundaries such as CDPs (Census Designated Places),
and the approximations of Zip Code areas (ZCTA boundaries)).
TIGER boundary data is not static, and in some cases appears to
have improved substantially since the early OSM imports ca. 2008.

USGS -The US Geological Survey
------------------------------
USGS maintains a number of boundary datasets. Their state and
county boundaries were one of the early imports into OSM,
but do not appear to be as high in quality as the current
TIGER data.

State and Local Government
--------------------------
Some state and local governments have made high quality data
available. MASSGIS (Massachusetts) is an excellent example.
Much local government data has been incorporated into TIGER,
which is one of the reasons why TIGER has improved markedly
since 2005.

Quattroshapes
-------------
Quattroshapes is a project that was developed by Foursquare
to try and provide a more useful set of borders. It is currently
supplied as shapefiles containing borders from various sources.
Data on the provenence of the borders is available. The largest
of these shapefiles is quite unwieldy, but they do represent another
available resource.


Bitrot and Updates
==================

It is common with OSM imports to overlook the problem of keeping
data up to date. There is no standard method for updates of TIGER
road centerline data that has changed the intial import in 2007,
nor is there any method for updates of the border data that was
imported in 2008. As it happens, this is a very big problem, because
the Census Bureau's effort to improve TIGER has made major progress
since.

For boundaries this is mostly noticeable in the borders for
places (cities, villages & cdps). In particular, CDPs (statistical
entities drawn by the Census Bureau themselves) have in some cases
changed quite a lot since 2008.

Update strategies, though, can be difficult because OSM is a wiki
project. Mappers can work on the boundaries themselves, and when
contemplating an update from Census Bureau sources, there is not
really a sound basis for making a choice between a mapper modified
boundary and an updated boundary from TIGER data (this is really
a variation of the fundamental problem of conflation; it's nearly
impossible to automate and frequently difficult for a person to make
an informed choice.)

Editing Issues
==============

Many of the initial import processes were haphazard and poorly
coordinated. The first US borders imported were derived from
USGS data that wasn't particularly accurate, and then followup
data was imported from Census Bureau data that was better. The
lack of coordination, though, resulted in border renderings that
looked like hash where USGS and Census Bureau data was close
but not the same (the borders on the Hudson River between
Glens Falls and NYC used to be a terrible mess - [Illustration
needed]).

On top of that, much hand editing occurred of borders, both
on purpose and accidentially, that didn't help things much.
What follows is a typical accidential editing scenario:

    Since the initial road centerlines also came from the Census
    Bureau's TIGER database, in cases where the road centerlines
    matched up with Census Bureau orders, usually the nodes on the
    road centerlines were at the same coordinates as nodes on the
    borders, and in cases where the road centerline crossed a
    border there would typically be a node. In the early days of
    OSM, there were de-duplication bots running around that were
    "helpfully" merging untagged nodes at the same lat/long. After
    that, from time to time mappers trying to fix data would fix
    a road or a border without realizing that they were also editing
    some thing else. Sometimes this was ok, but often it was not.

    When might this not be ok? In the road-crossing-border scenario,
    fixing a road might drag the border out of line, and fixing the
    border might drag a road out of line. In the road and border
    share nodes scenario, it's less clear. If the road is defined
    as the legal boundary (which does happen) then fixing the road
    and accidentially improving the border can be ok. But if, for
    example, the local DOT significantly changes the routing of a
    road, the legal border does not necessarily move to follow the
    new road alignment.

The intentional editing scenarios that can cause problems are
numerous and varied. Here are some examples relating to cases
where waterways (rivers and streams) are also legal boundaries.

    Frequently borders are defined with respect to rivers,
    lakes and streams. Quite a lot of our data about waterways
    in the US comes from the NHD (National Hydrography Dataset)
    which comes from the USGS. Interestingly enough, the old
    State and County borders from the USGS rarely if ever follow
    the NHD data very closely, which leads problems both with
    ugly map rendering and inaccuracies for geocoders (the
    Census Bureau borders generally seem to be much better
    about tracking waterways, at least in the case of the fully
    detailed borders from shapefiles; the simplified data in
    the ArcGIS extracts is over simplified and not as good.)

    So in some cases mappers have intentionally tweaked borders
    to match up with waterways. This is not necessarily a bad
    thing to do, but it is often done without considering the
    context and impact it will have on the map.

    For example, some years ago a mapper modified part of the
    USGS derived border between Pennsylvania and New York along
    the Delaware River to use a previously imported NHD centerline
    instead of the admittedly mediocre USGS state border. This
    did produce a more accurate border - for the section where
    the work was done. Unfortunately the mapper lacked the
    courage of his convictions and didn't do the entire length
    where the border followed the Delaware. On top of this,
    a subsequent import of boundaries from the Census Bureau
    for cities, villages and CDPs wasn't coordinated at all with
    the prior import, and the result was what I'll call border
    hash. I subsequently cleaned this up by importing newer,
    more accurate Census Bureau data and aligning all the borders
    to use it. The resulting border doesn't share the NHD river
    centerline, but it does fall within the river and the hash
    effect is gone. [Before and after illustration needed]

Inappropriate but Useful Borders
================================

There is clear consensus that there are many borders that are
useful for many types of Geo projects, but probably don't belong
in OSM. These borders probably include things like fire district
borders, school district borders, zip code approximations, and
so forth. CDPs are currently in OSM, but they are basically a
hack for place names because they frequently resemble a notion
about the location of a place name that doesn't correspond to a
governmental entity.

The Project
===========

The idea is to provide an example of what borders supplied outside
of OSM might look like. A group of servers will be set up, each one
supplying a particular set of border. Consumers of borders (geo coders
and map renderers, for example) would be able to pick and choose
what borders they need at any given time.

The initial implementation will use the OSM software stack. Sets of
borders will be supplied both via the OSM 0.6 API and as extracts
(shapefiles may be possible as well, but this may take a little extra
effort.) It would be little additional effort to set up mapnik to render
the borders so that potential users can look at each database with
a web browser and see what's actually in it.

The sets of borders initially will be decomposed to allow fine
selectivty. For example, in the TIGER Places files, the polygons represent
incorporated municipalities (in NY, cities and villages) and CDPs.
For this project, we will at a minimum separate CDPs out to a separate
system, and probably will separate municipality types out as well.
As the project evolves, recombining data sets to match the needs of
data consumers is a possibility.

The Effort So Far
=================

The initial effort focused on verifying that each individual piece is
well understood, using TIGER boundaries for New York state. This is
now complete. As part of this process, a python script named splitter
was developed which can take OSM format files pulled from shape files, and
both rewrite the shapefile attributes into appropriate OSM tags and
also break out the boundaries into different OSM format files based on
their tagging. This program will be used to split out the mixed types
of boundaries encountered some TIGER shapefiles.

The project has now moved into a new phase where we are trying to figure
out all the issues with the data nationwide. It has proven to be the
case that the Census Bureau boundary data does not always use their own
tagging system consistently, and also includes many types of boundary data
that we probably don't want to carry over at all - but we're not quite
sure which data that is just yet.

I anticipate that an example server providing the TIGER State boundaries
will be up shortly, followed by a server providing most of the data from
TIGER Places files.


